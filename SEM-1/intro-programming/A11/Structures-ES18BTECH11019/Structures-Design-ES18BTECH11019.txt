Design Document of Structures

Choice of data types:
        1. I chose  int data type for date,month,year and material because they are easy to access.
        2. I chose serial no. and material in a character array of specified length.

Assumptions from the user:
        1 Valid inputs are given in the format given in the question.
Flow of Program:
        1. Program scans inputs from the user. And then, input is received. No. of engine parts and their respective 
            information is received as input. I have took input in a structure named eparts.
        2. I have used 3 functions namely list_weights,list_year and print_details for printing outputs.
        3. I have passed Structure by reference pointer to it and for the list_weight function,
            I have checked whether if it's weight is >5 if true then I printed output.
        4. In list_year function I have checked whether first letter of serial no. of each parts
            is 'A' and third letter is >=2 (ptr->s_no)[2]-'0')>=2) or if first letter of serial no. of each parts
            is 'B' and third letter is <=7 (ptr->s_no)[2]-'0')<=7), if yes then I printed year corresponding 
            to the ptr.
        5. For the print_details function I have checked whether the date is before 3 years from
            15 Nov 2019 by using if else cases as shown in Pseudo code.

Error Handling:
        1. In list_weights function if there is no serial no. >5 I printed a "No entries found"
            and I did the same in other functions too.

Pseudo Code:

    typedef struct eparts {
    char s_no[4];
    int dd;
    int mm;
    int yy;
    char material[6];
    int weight;
} eparts;

 list_weights(eparts* ptr,int parts) {
    int flag=0;
    printf("Serial numbers where weight is more than 5kg : ");
    for(int i=0; i<parts; i++) {
        if((ptr->weight)>5) {
            flag=1;
            printf("%s ", ptr->s_no);
        }
        ptr++;
    }
    if(flag==0) printf("No entries found! \n");
}

 list_year(eparts* ptr,int parts) {
    int flag=0;
    printf("Year of manufacture of engine parts having serial number between AA2 and BB7 :");
    for(int i=0; i<parts; i++) {
        if((((ptr->s_no)[0])=='A' && ((ptr->s_no)[2]-'0')>=2) || (((ptr->s_no)[0])=='B' && ((ptr->s_no)[2]-'0')<=7)) {
            printf("%d ",(ptr->yy)); // Checking for valid condition
            flag=1;
        }
        ptr++;//incrementing pointer
    }
    if(flag==0) printf("No entries found!");
    printf("\n");
}

 print_details(eparts* ptr,int parts) {
    int flag=0;
    printf("Details of engine parts where year of manufacture is within 3 years of 15th Nov 2019 :\n");
    for(int i=0; i<parts; i++) {
        if((ptr->yy)>2016 && (ptr->yy)<=2019) { //Checking whether year of manufacture year is below 15th Nov 2019
            if((ptr->yy)==2019) {//if its 2019 then check other valid conditions
                if((ptr->mm)<11){
                    flag=1;
                     details(ptr);
                }
                else {
                    if((ptr->mm)==11 && (ptr->dd)<=15){
                            flag=1;
                            details(ptr);//print all details
                    }
                        
                }
            }
            else{
                flag=1;
                details(ptr);
            } 
        }
        else if((ptr->yy)==2016) { //else if year is 2016 then check other conditions
            if((ptr->mm)>11){
                flag=1;
                details(ptr);
            }    
            else {
                if((ptr->mm)==11 && (ptr->dd)>=15){
                    details(ptr);
                    flag=1;
                }
                    
            }
        }
        ptr++;//incrementing pointers
        printf("\n");
    }
    if(flag==0) printf("No entries found! \n");
}
    main(){
    Take inputs();
    list_weights(arr,parts);
    list_year(arr,parts);
    print_details(arr,parts);
    }
    

            