$date
	Mon Apr 15 08:50:56 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb $end
$var wire 16 ! sum [15:0] $end
$var wire 1 " cout $end
$var reg 16 # a [15:0] $end
$var reg 16 $ b [15:0] $end
$var reg 1 % cin $end
$var reg 1 & clk $end
$var reg 1 ' reset $end
$scope module u1 $end
$var wire 16 ( a [15:0] $end
$var wire 16 ) b [15:0] $end
$var wire 1 % cin $end
$var wire 1 & clk $end
$var wire 1 ' reset $end
$var wire 16 * sum [15:0] $end
$var wire 8 + ifbnextw [7:0] $end
$var wire 8 , ifanextw [7:0] $end
$var wire 8 - if3nextw [7:0] $end
$var wire 1 . if2nextw $end
$var wire 1 " cout $end
$var wire 4 / carry [3:0] $end
$var reg 1 0 if2 $end
$var reg 8 1 if3 [7:0] $end
$var reg 8 2 ifa [7:0] $end
$var reg 8 3 ifb [7:0] $end
$scope module w1 $end
$var wire 4 4 a [3:0] $end
$var wire 4 5 b [3:0] $end
$var wire 1 % cin $end
$var wire 4 6 s [3:0] $end
$var wire 1 7 cout $end
$var wire 5 8 c [4:0] $end
$scope begin genblk1[0] $end
$scope module fa $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; cin $end
$var wire 1 < s $end
$var wire 1 = cout $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module fa $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 @ cin $end
$var wire 1 A s $end
$var wire 1 B cout $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module fa $end
$var wire 1 C a $end
$var wire 1 D b $end
$var wire 1 E cin $end
$var wire 1 F s $end
$var wire 1 G cout $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module fa $end
$var wire 1 H a $end
$var wire 1 I b $end
$var wire 1 J cin $end
$var wire 1 K s $end
$var wire 1 L cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module w2 $end
$var wire 4 M a [3:0] $end
$var wire 4 N b [3:0] $end
$var wire 1 O cin $end
$var wire 4 P s [3:0] $end
$var wire 1 . cout $end
$var wire 5 Q c [4:0] $end
$scope begin genblk1[0] $end
$scope module fa $end
$var wire 1 R a $end
$var wire 1 S b $end
$var wire 1 T cin $end
$var wire 1 U s $end
$var wire 1 V cout $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module fa $end
$var wire 1 W a $end
$var wire 1 X b $end
$var wire 1 Y cin $end
$var wire 1 Z s $end
$var wire 1 [ cout $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module fa $end
$var wire 1 \ a $end
$var wire 1 ] b $end
$var wire 1 ^ cin $end
$var wire 1 _ s $end
$var wire 1 ` cout $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module fa $end
$var wire 1 a a $end
$var wire 1 b b $end
$var wire 1 c cin $end
$var wire 1 d s $end
$var wire 1 e cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module w3 $end
$var wire 4 f a [3:0] $end
$var wire 4 g b [3:0] $end
$var wire 1 0 cin $end
$var wire 4 h s [3:0] $end
$var wire 1 i cout $end
$var wire 5 j c [4:0] $end
$scope begin genblk1[0] $end
$scope module fa $end
$var wire 1 k a $end
$var wire 1 l b $end
$var wire 1 m cin $end
$var wire 1 n s $end
$var wire 1 o cout $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module fa $end
$var wire 1 p a $end
$var wire 1 q b $end
$var wire 1 r cin $end
$var wire 1 s s $end
$var wire 1 t cout $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module fa $end
$var wire 1 u a $end
$var wire 1 v b $end
$var wire 1 w cin $end
$var wire 1 x s $end
$var wire 1 y cout $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module fa $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 | cin $end
$var wire 1 } s $end
$var wire 1 ~ cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module w4 $end
$var wire 4 !" a [3:0] $end
$var wire 4 "" b [3:0] $end
$var wire 1 #" cin $end
$var wire 4 $" s [3:0] $end
$var wire 1 %" cout $end
$var wire 5 &" c [4:0] $end
$scope begin genblk1[0] $end
$scope module fa $end
$var wire 1 '" a $end
$var wire 1 (" b $end
$var wire 1 )" cin $end
$var wire 1 *" s $end
$var wire 1 +" cout $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module fa $end
$var wire 1 ," a $end
$var wire 1 -" b $end
$var wire 1 ." cin $end
$var wire 1 /" s $end
$var wire 1 0" cout $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module fa $end
$var wire 1 1" a $end
$var wire 1 2" b $end
$var wire 1 3" cin $end
$var wire 1 4" s $end
$var wire 1 5" cout $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module fa $end
$var wire 1 6" a $end
$var wire 1 7" b $end
$var wire 1 8" cin $end
$var wire 1 9" s $end
$var wire 1 :" cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
bx &"
x%"
bx $"
x#"
bx ""
bx !"
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
bx j
xi
bx h
bx g
bx f
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
bx Q
bx P
xO
bx N
bx M
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
bx 8
x7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
x0
bxzx /
x.
bx -
bx ,
bx +
bx *
bx )
bx (
0'
0&
x%
bx $
bx #
x"
bx !
$end
#10
0.
0d
0e
0c
0_
0`
0^
0Z
0[
0Y
b0 P
0U
0V
0T
b0 Q
0O
bxz0 /
07
0K
0L
0J
0F
0G
0E
0A
0B
0@
b0 -
b0 6
0<
0=
0:
0?
0D
0I
0S
0X
0]
0b
b0 +
09
0>
0C
0H
0R
0W
0\
0a
b0 ,
0;
b0 5
b0 N
b0 4
b0 M
b0 8
0%
b0 $
b0 )
b0 #
b0 (
1&
#20
0&
#30
0"
0%"
09"
0:"
08"
04"
05"
03"
0/"
00"
0."
b0 $"
0*"
0+"
0)"
b0 &"
0#"
0i
0}
0~
0|
0x
0y
0w
0s
0t
0r
b0 h
0n
0o
0l
0q
0v
0{
0("
0-"
02"
07"
0k
0p
0u
0z
0'"
0,"
01"
06"
0m
b0 g
b0 ""
b0 f
b0 !"
b0 !
b0 *
b0 1
b0 j
00
b0 3
b0 2
1U
1T
1O
b0z1 /
17
1A
1L
1Z
1@
1J
1Y
1=
b11010 8
1G
b11 Q
1V
b111 P
1_
b1110010 -
b10 6
0K
1:
1D
1S
1]
19
1C
1H
1R
b101 5
b101 N
b1101 4
b1 M
b1010101 $
b1010101 )
b11101 #
b11101 (
1&
#40
0&
#50
b1110010 !
b1110010 *
b1110010 1
0d
0c
1_
0`
1E
0Y
1J
0^
0A
1B
1K
0V
b1000 6
0F
b11110 8
1G
b1111000 -
b111 P
1Z
b1 Q
0[
1?
1I
0S
0]
0C
0R
1W
1\
b1111 5
b0 N
b1001 4
b110 M
b1111 $
b1111 )
b1101001 #
b1101001 (
1&
#60
0&
#70
b1111000 !
b1111000 *
b1111000 1
1d
1c
0_
1`
1^
0Z
1[
1Y
b10001000 -
b1000 P
0U
b1111 Q
1V
1R
b111 M
b1111001 #
b1111001 (
1&
#80
0&
#90
b10001000 !
b10001000 *
b10001000 1
0c
1_
0`
0^
1Z
0[
0Y
0.
1U
0V
b11111000 -
b1111 P
1d
b1 Q
0e
b10 +
0R
1a
b1110 M
b1000001111 $
b1000001111 )
b11101001 #
b11101001 (
1&
#100
0&
#110
b10 h
1s
1q
b10 g
b1011111000 !
b1011111000 *
b11111000 1
b10 3
1c
0_
1`
1^
0Z
1[
1Y
0U
b1111 Q
1V
b10001000 -
b1000 P
1d
1R
0a
b100 ,
b111 M
b10001111001 #
b10001111001 (
1&
